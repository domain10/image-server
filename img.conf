server {
    listen       80 default backlog=1000;
    server_name  localhost;

    set $root_path  '/data/photo';
    root $root_path;
    expires 7d;
    #lua_code_cache off;

    access_log /var/log/nginx/img.access.log nginx_log_json;
    error_log /var/log/nginx/img.error.log info;

    location / {
        index index.html index.htm;
        default_type 'text/html';
    }

    location ~* ^/(\w+)/([a-zA-Z0-9-]+)(_\d+[xX]\d+(?:[!\^])?)?(\.(?:jpg|jpeg|gif|png|mp4))$ {
        set $account_name $1;
        set $file_name $2;
        set $tail $3;
        set $ext $4;
        content_by_lua_file $root_path/lua/account.lua;
    }

    location ~* ^/((?:self/)?\d+/\d+/[a-zA-Z0-9]+)(?:_(\d+)x(\d+)([!\^])?)?(-[a-zA-Z0-9]+)\.(jpg|jpeg|gif|png|mp4)$ {
        # 缩放图的根目录
        set $thumbnail_root "${root_path}/watermark";
        #将nginx的root设置为缩放图的根目录，因为它要从这个目录下读取文件
        root $thumbnail_root;
        # 缩放图在本地的完整路径
        set $img_thumb_path $thumbnail_root$uri;
       
        #如果缩略图文件存在，直接返回  如果文件不存在时才需要裁剪
        if (!-f $img_thumb_path) {
            set $img_path $root_path/$1.$6;
            set $img_width $2;    # 设置裁剪/缩放的宽度
            set $img_height $3;    # 设置裁剪/缩放的高度
            set $img_resize_type $4; # resize的方式
            set $watermark $5; #水印
            set $img_ext $6; #目标图片的格式
            # 调用lua脚本，使用graphicmagick裁剪图片
            content_by_lua_file $root_path/lua/img.lua;
        }        
    }

    location ~* ^/((?:self/)?\d+/\d+/[a-zA-Z0-9]+)_(\d+)x(\d+)([!\^])?\.(jpg|jpeg|gif|png|mp4)$ {
        # 缩放图的根目录
        set $thumbnail_root "${root_path}/thumb";
        #将nginx的root设置为缩放图的根目录，因为它要从这个目录下读取文件
        root $thumbnail_root;
        # 缩放图在本地的完整路径
        set $img_thumb_path $thumbnail_root$uri;
       
        #如果缩略图文件存在，直接返回  如果文件不存在时才需要裁剪
        if (!-f $img_thumb_path) {
            set $img_path $root_path/$1.$5;
            set $img_width $2;    # 设置裁剪/缩放的宽度
            set $img_height $3;    # 设置裁剪/缩放的高度
            set $img_resize_type $4; # resize的方式
            set $img_ext $5; #目标图片的格式
            # 调用lua脚本，使用graphicmagick裁剪图片
            content_by_lua_file $root_path/lua/img.lua;
        }        
    }
    #
    location ~* ^/((?:self/)?\d+/\d+/[a-zA-Z0-9]+)(?:_(\d+)x(\d+)([!\^])?)?-([a-zA-Z0-9]+)_([a-zA-Z0-9]+)\.(jpg|jpeg|gif|png)$ {
        # p图，生成带logo或背景的图
        set $thumbnail_root "${root_path}/p_image";
        #将nginx的root设置为图的根目录，因为它要从这个目录下读取文件
        root $thumbnail_root;
        # 缩放图在本地的完整路径
        set $img_thumb_path $thumbnail_root$uri;
       
        #如果文件存在，直接返回  如果文件不存在时才需要裁剪
        if (!-f $img_thumb_path) {
            set $img_path $root_path/$1.$7;
            set $img_width $2;    # 设置裁剪/缩放的宽度
            set $img_height $3;    # 设置裁剪/缩放的高度
            set $img_resize_type $4; # resize的方式
            set $watermark $5; #水印
            set $p_image $6; #p图
            set $img_ext $7; #目标图片的格式
            # 调用lua脚本
            content_by_lua_file $root_path/lua/pimage.lua;
        }        
    }

    location /composev {
        set $libs_path "/data/lua/libs";
        content_by_lua_file /data/lua/composevideo.lua;
    }

    location /purevedio {
        set $libs_path "/data/lua/libs";
        content_by_lua_file /data/lua/composevideo.lua;
    }

    location ~ /\.ht {
        deny all;
    }
    
    location /nginx_status {
        stub_status on;
        access_log  off;
        allow 127.0.0.1;
        deny all;

    }
}

